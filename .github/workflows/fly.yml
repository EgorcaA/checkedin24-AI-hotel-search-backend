name: Deploy to Fly.io

# Trigger the workflow on push to the main branch
on:
  push:
    branches:
      - main

jobs:
  flake8:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.12
        uses: actions/setup-python@v1
        with:
          python-version: 3.12
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 flake8-html
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          mkdir -p reports/flake8
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=79 --statistics --format=html --htmldir=reports/flake8
      - name: Archive flake8 coverage results
        uses: actions/upload-artifact@v4
        with:
          name: flake8-coverage-report
          path: reports/flake8/

  pytest:
    name: Unit Testing
    needs: flake8
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.12
        uses: actions/setup-python@v1
        with:
          python-version: 3.12
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-html pytest-sugar pytest-json-report
      - name: Test with pytest
        run: |
          pytest -v --cov=app --cov-report=html:reports/pytest/coverage --html=reports/pytest/report.html
          env:
            OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY}}
      - name: Archive pytest coverage results
        uses: actions/upload-artifact@v4
        with:
          name: pytest-coverage-report
          path: reports/pytest/

  security_checks:
    needs: pytest
    runs-on: ubuntu-latest
    name: Security check
    steps:
      - uses: actions/checkout@v2
      - name: Run PyCharm Security
        uses: tonybaloney/pycharm-security@master
        with:
          path: app/

  deploy:
    name: Deploy app
    needs: [pytest, security_checks, flake8]
    runs-on: ubuntu-latest
    steps:
      # Check out the repository code
      - uses: actions/checkout@v4

      # Set up flyctl
      - uses: superfly/flyctl-actions/setup-flyctl@master

      # Deploy to Fly.io
      - run: flyctl deploy
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
